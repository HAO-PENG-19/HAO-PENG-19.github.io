<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>AHP</title>
      <link href="/2022/11/29/%E5%B1%82%E6%AC%A1%E5%88%86%E6%9E%90%EF%BC%88AHP%EF%BC%89/"/>
      <url>/2022/11/29/%E5%B1%82%E6%AC%A1%E5%88%86%E6%9E%90%EF%BC%88AHP%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="1-特点："><a href="#1-特点：" class="headerlink" title="1. 特点："></a>1. 特点：</h2><p>对复杂的决策问题的本质、影响因素及其内容在关系等进行深入分析的基础上，利用较少的定量信息使决策的思维过程数学化，从而为多目标、多准则或无结构特性的复杂决策问题提供简便的决策方法。</p><h2 id="2-方法概述："><a href="#2-方法概述：" class="headerlink" title="2. 方法概述："></a>2. 方法概述：</h2><p>它的特征是合理地将定性与定量决策结合起来，按照思维、心理的规律把决策过程细致化（层次化、数量化）。运用层次分析法建模大体上可以分为以下四个步骤：</p><ul><li>建立递阶层次结构模型；</li><li>构造出各层次中的所有判断矩阵；</li><li>层次单排序及一致性检验；</li><li>层次总排序及一致性检验。</li></ul><h3 id="2-1-递阶层次的建立"><a href="#2-1-递阶层次的建立" class="headerlink" title="2.1 递阶层次的建立"></a>2.1 递阶层次的建立</h3><ol><li>最高层：这一层次中只有一个元素，一般它是分析问题的预定目标和理想结果。</li><li>中间层：这一层次中包含为了实现目标所涉及的中间环节，主要是一些考虑指标和一些准则。</li><li>最底层：这一层次中包含为了实现目标可供选择的各种方案。<br>层次分析法要解决的问题是，求出最底层对最高层的相对权重，以此对最底层的方案、措施进行排序，选择最优方案。<br><img src="https://haopengblog.oss-cn-hangzhou.aliyuncs.com/AHP%201%20.png"></li></ol><h3 id="2-2-构造判断矩阵"><a href="#2-2-构造判断矩阵" class="headerlink" title="2.2 构造判断矩阵"></a>2.2 构造判断矩阵</h3><ul><li>判别矩阵</li></ul><p>$$ A &#x3D; \begin{pmatrix}<br>a_{11}&amp;…&amp;a_{1n}\<br>\vdots &amp;\ddots &amp;\vdots \<br>a_{n1}&amp;…&amp;a_{nn}\<br>\end{pmatrix} &#x3D; (a_{ij})<em>{n*n}$$<br>在比较第 i 个元素与第 j 个元素相对于上一层某个因素的重要性时，使用数量化的相对重要度 $a</em>{ij}$来表示。</p><ul><li>关于判别矩阵元素的确定:<br> <img src="https://haopengblog.oss-cn-hangzhou.aliyuncs.com/AHP%202.png"></li></ul><h3 id="2-3-层次单排序及一致性检验（一致性检验主要是为了避免矛盾）"><a href="#2-3-层次单排序及一致性检验（一致性检验主要是为了避免矛盾）" class="headerlink" title="2.3 层次单排序及一致性检验（一致性检验主要是为了避免矛盾）"></a>2.3 层次单排序及一致性检验（一致性检验主要是为了避免矛盾）</h3><ul><li>计算判断矩阵A的最大特征根$\lambda_{max}$和其对应的特征向量W$$AW &#x3D; \lambda_{max}W$$</li><li>W和$\lambda_{max}$的求法一般采用方根法，和积发具体操作可以见文末视频。</li><li>一致性检验是为了允许判断矩阵允许有不一致的范围</li><li>一致性检验的步骤如下：<ol><li>计算一致性指标CI：$$ CI &#x3D;\frac{\lambda_{max} - n}{n - 1}  $$CI &#x3D; 0表示完全一致，CI越大越不一致</li><li>查询平均随机一致性指标RI，对应 n&#x3D;1 到10。（具体RI值可以查找相关论文）</li><li>计算一致性比例CR：$$ CR &#x3D; \frac{CI}{RI} $$当CR &lt; 0.1时，认为矩阵的一致性是可以接受的。</li></ol></li></ul><h3 id="2-4-层次总排序一致性检验"><a href="#2-4-层次总排序一致性检验" class="headerlink" title="2.4 层次总排序一致性检验"></a>2.4 层次总排序一致性检验</h3><ul><li>即从上而下逐层进行各层元素对目标合成权重的计算</li></ul><h2 id="3-学习文献"><a href="#3-学习文献" class="headerlink" title="3. 学习文献"></a>3. 学习文献</h2><ul><li><p><a href="https://www.bilibili.com/video/BV1hK411G76S/?spm_id_from=333.337.search-card.all.click&vd_source=dda92d4fe82243bc28b93d183eff082a">层次分析法（AHP）步骤详解_哔哩哔哩_bilibili</a></p></li><li><p><a href="https://zhuanlan.zhihu.com/p/43631314">数学建模十大算法之——层次分析法 - 知乎 (zhihu.com)</a></p></li><li><p>例题：2002年国赛彩票</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> knowledge in uni </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Math </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>c++STL库初步</title>
      <link href="/2022/11/09/c++-STL%E5%BA%93%E5%88%9D%E6%AD%A5/"/>
      <url>/2022/11/09/c++-STL%E5%BA%93%E5%88%9D%E6%AD%A5/</url>
      
        <content type="html"><![CDATA[<p>​        C++ 对模板（Template）支持得很好，STL 就是借助模板把常用的数据结构及其算法都实现了一遍，并且做到了<strong>数据结构和算法的分离</strong>。STL提供了以下三种数据结构的实现：</p><ol><li>顺行性容器<ul><li>vector</li><li>deque</li><li>list</li></ul></li><li>关联容器<ul><li>set</li><li>muitiset</li><li>map</li><li>multipmap</li></ul></li><li>容器适配器<ul><li>stack</li><li>queue</li><li>priority_queue</li></ul></li></ol><h2 id="Vector"><a href="#Vector" class="headerlink" title="Vector"></a>Vector</h2><h3 id="Vector的创建"><a href="#Vector的创建" class="headerlink" title="Vector的创建"></a>Vector的创建</h3><p>​       vector 是一个可以自动改变长度的数组。可以非常友好的的用来以邻接表的方式存储图。</p><pre><code class="c++">//引入需要的头文件#include &lt;vector&gt;using namespace std;//定义vector &lt;类型名&gt; 变量名;</code></pre><p>类型可以是int double char struct 也可以是STL容器，如vector，set，queue。</p><p>其中</p><pre><code class="c++">vector&lt;vector&lt;类型&gt; &gt; 变量名     //表示一个二维数组 </code></pre><h3 id="Vector的初始化"><a href="#Vector的初始化" class="headerlink" title="Vector的初始化"></a>Vector的初始化</h3><pre><code class="c++">vector&lt;int&gt; a //初始化一个不确定元素个数的数组    vector&lt;int&gt; a(10) //定义了10个整形元素的向量（数组），但没有给出初始值，因此其值是不确定的    vector&lt;int&gt; a(10，1) //定义了10个整形元素，且每个元素的初始值未1    vector&lt;vector&lt;int&gt; &gt; a(M, vector&lt;int&gt;(N，1))//定义了一个M行N列的二维数组，初始值为1    vector&lt;vector&lt;int&gt; &gt; a(M) //初始化一个M行列数不确定的数组vector&lt;vector&lt;int&gt; &gt; a //初始化一个行列都不确定的数组vector&lt;int&gt; a[100] //初始化了一个行可以自动分配，列不可以自动分配的数组    /*注意：vector&lt;int&gt; a;for(int i=0;i&lt;10;i++)    a[i]=i;这样使用是错误的，由于下标只能用于获取已经存在的数组，所以要这样使用的话，应该要先初始化数组*/</code></pre><h3 id="Vector的函数"><a href="#Vector的函数" class="headerlink" title="Vector的函数"></a>Vector的函数</h3><ol><li>插入</li></ol><pre><code class="c++">a.insert(a.begin(), 3)    //在头部插入3a.insert(a.end(), 2)      //在尾部加入2a.push_back(x)            //尾部插入</code></pre><ol start="2"><li>删除</li></ol><pre><code class="c++">a.pop_back()          //删除最后一个元素，会使得容器长度（size）减短，但容器容量（capacity）不会变。a.erase(a.begin())             //删除指定位置的元素    </code></pre><ol start="3"><li>大小</li></ol><pre><code class="c++">a.size()             //容器中数据长度a.capacity           //容器的长度</code></pre><h2 id="List"><a href="#List" class="headerlink" title="List"></a>List</h2><h3 id="List的创建"><a href="#List的创建" class="headerlink" title="List的创建"></a>List的创建</h3><p>​lsit —— 双向循环列表容器双链表既可以向前又向后链接他的元素。每一个元素都知道前面一个元素和后面一个元素。</p><p><img src="C:\Users\KUZMA\AppData\Roaming\Typora\typora-user-images\image-20221124111201363.png" alt="image-20221124111201363"></p><p>list 容器具有一些其它容器（array、vector 和 deque）所不具备的优势，即它可以在序列已知的任何位置快速插入或删除元素（时间复杂度为<code>O(1)</code>）。并且在 list 容器中移动元素，也比其它容器的效率高。</p><p>使用 list 容器的缺点是，它不能像 array 和 vector 那样，通过位置直接访问元素。</p><pre><code class="C++">//引入需要的头文件#include &lt;list&gt;using namespace std;//定义list &lt;类型名&gt; 变量名; list&lt;A&gt; Listname(size,value);</code></pre><h3 id="List操作"><a href="#List操作" class="headerlink" title="List操作"></a>List操作</h3><pre><code class="c++">    l.insert(position, n, ele) //插入一个元素到list中    l.push_back() //在list的末尾添加一个元素     l.push_front() //在list的头部添加一个元素        l.clear() //清空list的所有元素    l.erase() //删除一个元素    l.erase(l.begin(),l.end())  //将l从begin()到end()之间的元素删除。    l.pop_back() //删除最后一个元素     l.pop_front() //删除第一个元素    l.remove() //从list删除指定元素     l.unique() //删除list中重复的元素        l.resize() //改变list的大小    l.reverse() //把list的元素倒转        l.front() //返回第一个元素     l.back() //返回最后一个元素    l.empty() //若list是空的则返回true，否则返回false    l.max_size() //返回list能容纳的最大元素数量     l.size() //返回list中的元素个数    l.assign() //给list赋值    l.get_allocator() //返回list的配置器    l.merge() //合并两个list    l.begin() //返回指向第一个元素的迭代器     l.end() //返回末尾的迭代器    l.rbegin() //返回指向第一个元素的逆向迭代器     l.rend() //指向list末尾的逆向迭代器    l.sort() //给list排序    l.splice() //合并两个list    l.swap() //交换两个list</code></pre><h3 id="List的使用"><a href="#List的使用" class="headerlink" title="List的使用"></a>List的使用</h3><ul><li>遍历list</li></ul><pre><code class="C++">/*遍历一*/     list&lt;int&gt;row;             //定义list      list&lt;int&gt;::iterator p1;        //定义迭代器 用于遍历      cout&lt;&lt;&quot;请输入数据个数：&quot;;     int n;     cin&gt;&gt;n;      //输入值     int j;     for(j=0;j&lt;n;j++) &#123;         int data;         cin&gt;&gt;data;         row.push_back(data);     //push_back()从list的末端插入一个元素      &#125;/*遍历二*/     list&lt;list&lt;int&gt;&gt;l1;             //定义外层list      list&lt;int&gt;row;                  //定义内层list     list&lt;int&gt;::iterator p1;        //定义迭代器 用于遍历内层元素      list&lt;list&lt;int&gt;&gt;::iterator p2;  //定义迭代器 用于遍历外层元素      cout&lt;&lt;&quot;请输入行数：&quot;;     int n;   //行数      cin&gt;&gt;n;     //输入值       int i,j;     for(i=0;i&lt;n;i++)&#123;     row.clear();               //清空list      cout&lt;&lt;&quot;当前第&quot;&lt;&lt;i+1&lt;&lt;&quot;行，请输入该行数据&quot;&lt;&lt;endl;     for(j=0;j&lt;i+1;j++) &#123;          int data;          cin&gt;&gt;data;          row.push_back(data);     //push_back()从row的末端插入一个元素        &#125;        l1.push_back(row);         //push_back()从l1的末端插入一个元素        &#125;                //外层迭代器 遍历list&lt;list&lt;int&gt;&gt; l1     for(p2=l1.begin();p2!=l1.end();p2++)&#123;     list&lt;int&gt; ls = *p2;     //内层迭代器 遍历list&lt;int&gt; row     for(p1=ls.begin();p1!=ls.end();p1++)&#123;        cout&lt;&lt; *p1 &lt;&lt;&quot; &quot;;        &#125;        cout&lt;&lt;endl;    &#125;    /*遍历三*/     //遍历值        cout&lt;&lt;&quot;list:&quot;;     for(p1=row.begin();p1!=row.end();p1++)&#123;        cout&lt;&lt; *p1 &lt;&lt;&quot; &quot;;     &#125;    for (auto&amp; e : lt)        cout &lt;&lt; e &lt;&lt; &quot; &quot;;    cout &lt;&lt; endl;//begin()是返回第一个值的迭代器，end()是返回指向容器中的最后一个元素下一个位置的迭代器（即头节点）</code></pre><ul><li>其他用法</li></ul><pre><code class="c++">//list不能随机访问容器中的值，即不能it+n这样的操作。只能一个一个的走，即it++,因此遍历list需要用迭代器list&lt;int&gt;::iterator it = l.begin();while(it!=l.end())&#123;    cout&lt;&lt;*it&lt;&lt;&quot; &quot;;    it++;&#125;//用for遍历    list&lt;int&gt; lt;    lt.push_back(1);    lt.push_back(2);    lt.push_back(3);    for (auto it = lt.begin(); it != lt.end(); it++)        cout &lt;&lt; *it &lt;&lt; &quot; &quot;;    cout &lt;&lt; endl;    for (auto&amp; e : lt)     //auto是根据类型的初始值来定义类型的相当于迭代器        cout &lt;&lt; e &lt;&lt; &quot; &quot;;    cout &lt;&lt; endl;//要想删除一个区间段。只能用迭代器++一步一步的指向那个末尾位置，不能直接l.begin()+n    list&lt;int&gt;::iterator it_begin = l.begin();    list&lt;int&gt;::iterator it_end = l.begin();    it2++;    it2++;    it2++;    l.erase(it1, it2);//删掉的是区间[it1,it2) </code></pre><h2 id="Queue"><a href="#Queue" class="headerlink" title="Queue"></a>Queue</h2><h3 id="Queue的创建"><a href="#Queue的创建" class="headerlink" title="Queue的创建"></a>Queue的创建</h3><p>​queue是一种容器模板，即可使用队列类(专门用于FIFO), 只能在容器的末尾添加新元素，只能从头部移除元素。</p><pre><code class="c++">//引入需要的头文件#include &lt;queue&gt;using namespace std;//定义queue &lt;类型名&gt; 变量名;    //因为queue转换器要求容器支持front（）、back（）、push_back（）及 pop_front（），说明queue的数据从容器后端入栈而从前端出栈。所以可以使用deque和list对queue初始化，而vector因其缺少pop_front（），不能用于queue。</code></pre><h3 id="Queue操作"><a href="#Queue操作" class="headerlink" title="Queue操作"></a>Queue操作</h3><pre><code class="c++">front() //返回第一个元素back()  //返回最后一个元素push()  //队尾插入一个元素pop()   //删除队列第一个元素size()  //返回元素的个数empty() //判断是否为空</code></pre><h2 id="Stack"><a href="#Stack" class="headerlink" title="Stack"></a>Stack</h2><h3 id="Stack创建"><a href="#Stack创建" class="headerlink" title="Stack创建"></a>Stack创建</h3><p>专门进行LIFO的操作，即元素只从容器的一端插入和提取。 </p><pre><code class="c++">#include&lt;stack&gt;stack&lt;int&gt; s; //定义栈</code></pre><h3 id="Stack操作"><a href="#Stack操作" class="headerlink" title="Stack操作"></a>Stack操作</h3><pre><code class="c++">size();   //返回元素数目push();   //栈顶增加元素pop();    //移除栈顶元素top();    //返回栈顶元素empty();  //判断是否为空</code></pre>]]></content>
      
      
      <categories>
          
          <category> knowledge in uni </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Algorithm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Deutschlernen-3</title>
      <link href="/2022/10/08/Deutschlernen-3/"/>
      <url>/2022/10/08/Deutschlernen-3/</url>
      
        <content type="html"><![CDATA[<h1 id="Oktober"><a href="#Oktober" class="headerlink" title="Oktober"></a>Oktober</h1><!-- toc --><h2 id="10-8-10-9-B1-Lektion1"><a href="#10-8-10-9-B1-Lektion1" class="headerlink" title="10.8 - 10.9(B1_Lektion1)"></a>10.8 - 10.9(B1_Lektion1)</h2><ol><li><p>sich ärgern über …              对…..生气</p></li><li><p>der Kaiser                     帝王</p></li><li><p>schieben                       推开</p></li><li><p>beeindrucken               给….留下深刻印象</p><p>der Eindruck                 印象</p></li><li><p>hinterlassen                 留下（不可分动词）</p></li><li><p>behandeln                    对待，治疗</p></li><li><p>der Besitzer                  占有人</p></li><li><p>nach der Geburt einer Prinzessin                   在公主的生日之后</p></li><li><p>werden的变位</p><table><thead><tr><th></th><th>现在时</th><th>过去时</th><th>现在完成时</th></tr></thead><tbody><tr><td>ich</td><td>werde</td><td>wurde</td><td>bin geworden</td></tr><tr><td>du</td><td>wirst</td><td>wurdest</td><td>bist geworden</td></tr><tr><td>er&#x2F;sie&#x2F;es</td><td>wird</td><td>wurde</td><td>ist geworden</td></tr><tr><td>wir</td><td>werden</td><td>wurden</td><td>sind geworden</td></tr><tr><td>ihr</td><td>werdet</td><td>wurdet</td><td>seid geworden</td></tr><tr><td>sie&#x2F;Sie</td><td>werden</td><td>wurden</td><td>sind geworden</td></tr></tbody></table><p>werden作为动词表示 变得</p><p>除此之外werden作动词还可以构成将来时，被动态以及第二虚拟式</p></li><li><p>genug                                 足够</p></li><li><p>stechen                              扎</p></li><li><p>sterben                              死亡</p></li><li><p>hübsche                            漂亮的                                hässlichen                        丑的</p></li><li><p>begegnen                         遇见</p><p>sich begegnen                 彼此遇见</p></li><li><p>sorgen für ….                   关心，照顾…..</p></li><li><p>Es geht darum, dass …..              有关 ….</p></li><li><p>sich (vor jm.&#x2F;etw.) fürchten        担心…;害怕…</p></li><li><p>die Angst                              害怕</p><p>Angst um …. haben            为…..担忧</p></li><li><p>schauen                                看</p></li><li><p>das Kommentar                  评论</p></li><li><p>Gut und Böse                                       好和坏</p><p>Zuauberer und Fantasiewesen         魔术师和幻想的生物   </p></li><li><p>Hinzu kommt                       此外</p></li><li><p>der Mut                                 勇气</p></li><li><p>allgemein                              普遍的，共同的</p></li><li><p>ansprechen（ j-d&#x2F;etw. spricht j-n an ）对…产生积极影响</p></li><li><p>das Volk       大众                  der Volksmund       民间传说（大众的嘴）</p></li><li><p>nennen            叫做</p></li><li><p>glücklich und unbeschwert                 幸福和无忧无虑的</p></li><li><p>zur Welt bringen                                   出生</p></li><li><p>u.a. &#x3D; unter anderem                           此外</p></li><li><p>erfolgreich                                             成功的</p></li><li><p>leiden unter + etwas（D.）                受痛苦的</p></li><li><p>Im vergleich …. &#x2F; Verglichen mit ….   与…. 比较</p></li><li><p>表示时间先后的连词</p><table><thead><tr><th>时间先后</th><th>连词</th></tr></thead><tbody><tr><td>后时性</td><td>ehe &#x2F; bevor</td></tr><tr><td>同时性</td><td>solange</td></tr><tr><td>先时性</td><td>sobald（时态一致） &#x2F; nachem（时态不一致）</td></tr></tbody></table></li><li><p>genißen                                                    享受</p></li><li><p>empfangen                                              迎接</p></li><li><p>die Hochzeit                                            结婚，婚礼</p></li><li><p>Angst vor …….                                         害怕</p><p>Angst um …….                                         担心</p></li><li><p>an erster stelle &#x3D; auf platze 1              第一位</p></li><li><p>sich einigen auf                                      在 …. 上达成一致</p></li><li><p>schließlich                                                终于</p></li><li><p>sorgen …. für &#x3D; anbieten                       提供</p></li><li><p>形容词词尾：</p><ul><li><p>有定冠词：</p><p><img src="https://phblog.oss-cn-hangzhou.aliyuncs.com/typ_1.png" alt="有定冠词"></p></li><li><p>有不定冠词</p><p><img src="https://phblog.oss-cn-hangzhou.aliyuncs.com/typ_2.png" alt="有不定冠词"></p></li><li><p>零冠词</p><p><img src="https://phblog.oss-cn-hangzhou.aliyuncs.com/typ_3.png" alt="零冠词"></p></li></ul></li></ol><h2 id="10-12"><a href="#10-12" class="headerlink" title="10.12-"></a>10.12-</h2>]]></content>
      
      
      <categories>
          
          <category> knowledge in uni </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Deutsch </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>学生账号申请专业版JETBRAINS</title>
      <link href="/2022/09/29/%E5%AD%A6%E7%94%9F%E8%B4%A6%E5%8F%B7%E7%94%B3%E8%AF%B7%E4%B8%93%E4%B8%9A%E7%89%88JETBRAINS/"/>
      <url>/2022/09/29/%E5%AD%A6%E7%94%9F%E8%B4%A6%E5%8F%B7%E7%94%B3%E8%AF%B7%E4%B8%93%E4%B8%9A%E7%89%88JETBRAINS/</url>
      
        <content type="html"><![CDATA[<h1 id="1-学生邮箱"><a href="#1-学生邮箱" class="headerlink" title="1.学生邮箱"></a>1.学生邮箱</h1><p>百度搜索广西大学学生邮箱</p><p><img src="https://phblog.oss-cn-hangzhou.aliyuncs.com/JB1.png"></p><p>进入之后按照广西大学网络中心的文件获取一个自己的学生邮箱。</p><h1 id="2-下载"><a href="#2-下载" class="headerlink" title="2.下载"></a>2.下载</h1><p>进入 <a href="https://www.jetbrains.com/pycharm/">pycharm官网</a></p><p>点击右上方的pricing</p><p><img src="https://phblog.oss-cn-hangzhou.aliyuncs.com/JB2.png" alt="image-20220929182758123"></p><p>再选择Special Offers</p><p><img src="https://phblog.oss-cn-hangzhou.aliyuncs.com/JB3%20.png" alt="image-20220929182849609"></p><p>找到For students and teachers，点击Learn more</p><p><img src="https://phblog.oss-cn-hangzhou.aliyuncs.com/JB4.png" alt="image-20220929182948683"></p><p>进入后点击apply now</p><p><img src="https://phblog.oss-cn-hangzhou.aliyuncs.com/JB5.png" alt="image-20220929183110896"></p><p>如实填写信息（此处邮箱即为广西大学的学生邮箱）</p><p><img src="https://phblog.oss-cn-hangzhou.aliyuncs.com/JB6.png" alt="image-20220929183226031"></p><p>注册完成之后，便可使用以下所有软件的专业版：</p><p><img src="https://phblog.oss-cn-hangzhou.aliyuncs.com/JB7.png" alt="image-20220929183450815"></p><h1 id="3-安装"><a href="#3-安装" class="headerlink" title="3.安装"></a>3.安装</h1><p>专业版安装和社区版安装方法一致，按照其他安装教程一步一步进行即可</p>]]></content>
      
      
      <categories>
          
          <category> knowledge in uni </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JETBRAINS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Deutschlernen-2</title>
      <link href="/2022/09/07/Deutschlernen-2/"/>
      <url>/2022/09/07/Deutschlernen-2/</url>
      
        <content type="html"><![CDATA[<h1 id="September"><a href="#September" class="headerlink" title="September"></a>September</h1><!-- toc --><h2 id="9-6"><a href="#9-6" class="headerlink" title="9.6"></a>9.6</h2><h3 id="Worter（词汇）"><a href="#Worter（词汇）" class="headerlink" title="Wörter（词汇）"></a>Wörter（词汇）</h3><ol><li><p>denken                                          想念，思念</p><p>Beim Begriff “Freizeit” denken ich an meinen Fußballclub.</p></li><li><p>einfallen                                       突然想到</p><p>Mir fiel bei diesem Thema sofort meine Famile ein.</p></li><li><p>enthalten                                       包含，包括</p><p>Unsere Sammlung enthält auch den Begriff “Liebe”.</p></li><li><p>in erster Linie                               首先，主要是</p><p>Menschen verbindet in erster Linie das Interesse für die gleichen Themen.</p></li><li><p>die Grafik                                      图表</p><p>In der Grafik gibt es auch eine Katagorie “Familie”.</p></li><li><p>folgend                                         以下的</p><p>Folgende Begriffe habe ich gefunden:Liebe, Freizeit und Familie.</p></li><li><p>der Begriff                                  单词</p><p>Einen Unterschied zwischen unseren Notizen gibt es beim Begriff “Literatur”.</p></li><li><p>festhalten                                   抓住</p><p>Sie hält sich an einem Regal fest.</p></li><li><p>ganz                                            完全</p><p>Akutelle Literatur interessiert mich ganz besonders.</p></li><li><p>die Sammlung                          收集</p><p>Unsere Sammlung enthält auch den Begriff “Liebe”.</p></li><li><p>vor allem                                    首先</p><p>Mensch verbindet vor allem das Thema “Liebe”.</p></li><li><p>woran                                         想什么</p><p>Woran wir nicht gedacht haben, sind folgende Themen: Literatur und Studium.</p></li><li><p>erinnern                                    想起，回忆想</p><p>An die Brücke kann ich mich erinnern.</p></li><li><p>der Frühaufsteher                   习惯早起的人</p><p>Er ist absolut kein Frühaufsteher und liebt sein Bett.</p></li><li><p>die Bildung                               教育</p><p>Bildung ist mir sehr wichtig.</p></li><li><p>fühlen                                        感到</p><p>Ich fühle mich auch in Deutschland zu Hause.</p></li></ol><h2 id="9-7"><a href="#9-7" class="headerlink" title="9.7"></a>9.7</h2><h3 id="Worter（词汇）-1"><a href="#Worter（词汇）-1" class="headerlink" title="Wörter（词汇）"></a>Wörter（词汇）</h3><ol><li><p>der Gedanke                             想法，思考</p><p>Meine Gedanken sind manchmal auch in Deutsch.</p></li><li><p>die Muttersprache                   母语</p><p>Für mich ist meine Sprache Heimat.</p></li><li><p>die Freiheit                                自由</p><p>In der Jugend wollen viele junge Erwaschene mehr Freiheiten.</p></li><li><p>die Grenze                                极限，限度</p><p>Die Grenzen meiner Sprache bedeuten die Grenzen meiner Welt.</p></li><li><p>ander                                         另外</p><p>Wie viele andere Wörter kennen Sie für “gehen”.</p></li><li><p>besonder                                  特别的</p><p>Die Sprache ist eine besondere Eigenschaft des Menschen.</p></li><li><p>die Eigenschaft                        品格，特性，素质</p><p>Die Sprache ist eine besondere Eigenschaft des Menschen.</p></li><li><p>zweisprachig                             两种语言的</p><p>Ich bin zweisprchig aufgewachsen.</p></li><li><p>aufwaschen                             成长</p><p>Ich bin zweisprchig aufgewachsen.</p></li><li><p>belegen                                    报名</p><p>Ich habe schon einen Kurs in Spanisch belegt.</p></li><li><p>das Nomen                             名词</p></li><li><p>feminin                                    阴性</p></li><li><p>maskulin                                 阳性</p></li><li><p>einsilbig                                  单音节</p></li><li><p>der Senf                                  芥末</p></li><li><p>erscheinen                             出版，发表</p><p>Es erscheinen weltweit viele Bücher auf Deutsch.</p></li><li><p>die Wahrscheinlichkeit        概率   </p><p>Wie hoch ist die Wahrscheinlichkeit?</p></li><li><p>der Wasserskisportclub       滑水运动俱乐部</p></li><li><p>der Vocal                                 元音</p></li><li><p>der Konsonant                       辅音</p></li><li><p>alphabetisch                           换字母的</p></li><li><p>außerhalb                               在 …. 之外</p><p>Außerhalb der EU sind die Grenzen meistens geschloss.</p></li><li><p>der Sprachraum                    语言区</p><p>Die Dialekte im deutschen Sprachraum sind sehr unterschiedlich.</p></li><li><p>der Studiengang                    大学课程</p><p>Für welchen Studiengang hast du dich entschieden?              </p></li><li><p>die Meinung                           看法，观点</p><p>Was ist Ihrer Meinung nach die schwerste Sprache?</p></li><li><p>bereisen                                  游览，游历</p><p>Wie viele Länder haben Sie in ihrem Leben bereist ?</p></li><li><p>daher                                       所以    </p><p>Ich interessiere mich für Architektur. Daher mag ich Berlin sehr gern.</p></li></ol><h2 id="9-9"><a href="#9-9" class="headerlink" title="9.9"></a>9.9</h2><h3 id="Worter（词汇）-2"><a href="#Worter（词汇）-2" class="headerlink" title="Wörter（词汇）"></a>Wörter（词汇）</h3><ol><li>Die Dauer</li><li>das Funksignal</li><li>Rechenschrit</li><li>die Wimpernschlag</li><li>die Ein tagsfliege</li><li>die Lebenswartung</li><li>die Taschenmaus</li><li>die Wartezeit</li><li>das Zeitdokument</li><li>der Zeitdruck</li><li>merken</li><li>überrascht</li><li>kalr</li><li>gleichzeitlig</li><li>das Instrument</li><li>so …. bald</li><li>dahinschleichen</li><li>stillstehen</li><li>wie im Flug</li><li>ahnen</li><li>dern Liebling</li><li>durchschnittlich</li><li>dieselbe</li><li>deutlich</li><li>die Arbeitspause</li><li>der Wissenschaftler</li><li>erstaunt</li><li>das zärtlichsein</li></ol>]]></content>
      
      
      <categories>
          
          <category> knowledge in uni </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Deutsch </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>java-基础_2</title>
      <link href="/2022/08/31/java-%E5%9F%BA%E7%A1%80-2/"/>
      <url>/2022/08/31/java-%E5%9F%BA%E7%A1%80-2/</url>
      
        <content type="html"><![CDATA[<h1 id="类的重用"><a href="#类的重用" class="headerlink" title="类的重用"></a>类的重用</h1><h2 id="类继承的概念和语法"><a href="#类继承的概念和语法" class="headerlink" title="类继承的概念和语法:"></a>类继承的概念和语法:</h2><ol><li>java之指出类的单继承，即没一个子类只有一个直接的超类。</li></ol><pre><code class="java">//继承的语法[ClassModifier] class ClassName extends SuperClassName&#123; //类体&#125;</code></pre><pre><code class="java">//e.g.(Manager-&gt;Employee-&gt;Person)public class Person &#123;  public String name;  public String getName() &#123;    return name;   &#125;&#125; public class Employee extends Person &#123;     public int employeeNumber;     public int getEmployeeNumber() &#123;        return employeeNumber;     &#125; &#125; public class Manager extends Employee &#123;     public String responsibilities;     public String getResponsibilities() &#123;       return responsibilities;    &#125; &#125;public class Exam3_2Test &#123;  public static void main(String args[])&#123;    Employee li = new Employee();     li.name = &quot;Li Ming&quot;;     li.employeeNumber = 123456;     System.out.println(li.getName());    System.out.println(li.getEmployeeNumber());         Manager he = new Manager();     he.name = &quot;He Xia&quot;;     he.employeeNumber = 543469;               he.responsibilities = &quot;Internet project&quot;;     System.out.println(he.getName());     System.out.println(he.getEmployeeNumber());    System.out.println(he.getResponsibilities());  &#125;&#125;</code></pre><p>子类不能直接访问从超类中继承的私有属性及方法，但可使用公有（及保护）方法进行访问</p><pre><code class="java">public class B &#123;    public int a = 10;    private int b = 20;    protected int c = 30;    public int getB()  &#123; return b; &#125; &#125; public class A extends B &#123;    public int d;    public void tryVariables() &#123;       System.out.println(a);             //允许       System.out.println(b);             //不允许      System.out.println(getB());     //允许       System.out.println(c);             //允许     &#125; &#125;</code></pre><h2 id="隐藏和覆盖："><a href="#隐藏和覆盖：" class="headerlink" title="隐藏和覆盖："></a>隐藏和覆盖：</h2><h3 id="隐藏："><a href="#隐藏：" class="headerlink" title="隐藏："></a>隐藏：</h3><p>子类中声明了与超类中相同的成员变量名</p><ul><li>从超类继承的变量将被隐藏</li><li>子类拥有了两个相同名字的变量，一个继承自超类，另一个由自己声明</li><li>当子类执行继承自超类的操作时，处理的是继承自超类的变量，而当子类执行它自己声明的方法时，所操作的就是它自己声明的变量</li><li>调用从超类继承的方法，则操作的是从超类继承的属性</li><li>本类中声明的方法使用“super.属性”访问从超类继承的属性</li></ul><pre><code class="java">class A1&#123;   int x = 2;        public void setx(int i)     &#123;   x = i;    &#125;    void printa()    &#123;System.out.println(x);&#125;  &#125;class B1 extends A1&#123;   int x=100;    void printb()     &#123;  super.x = super.x +10 ;       System.out.println(&quot;super.x=&quot; +                    super.x + &quot;  x= &quot; + x);    &#125;  &#125;public class Exam3_5_1Tester &#123;  public static void main(String[] args)    &#123;   A1 a1 = new A1();           a1.setx(4);            a1.printa();         B1 b1 = new B1();              b1.printb();              b1.printa();             b1.setx(6);  // 将继承x值设置为6         b1.printb();              b1.printa();         a1.printa();    &#125;  //运行结果：4super.x= 12  x= 10012super.x= 16  x= 100164</code></pre><h3 id="覆盖："><a href="#覆盖：" class="headerlink" title="覆盖："></a>覆盖：</h3><ul><li>如果子类不需使用从超类继承来的方法的功能，则可以声明自己的同名方法，称为方法覆盖</li><li>覆盖方法的返回类型，方法名称，参数的个数及类型必须和被覆盖的方法一摸一样</li><li>只需在方法名前面使用不同的类名或不同类的对象名即可区分覆盖方法和被覆盖方法</li><li>覆盖方法的访问权限可以比被覆盖的宽松，但是不能更为严格</li></ul><h4 id="覆盖的应用场合"><a href="#覆盖的应用场合" class="headerlink" title="覆盖的应用场合"></a>覆盖的应用场合</h4><ul><li>子类中实现与超类相同的功能，但采用不同的算法或公式 ；</li><li>在名字相同的方法中，要做比超类更多的事情 ；</li><li>在子类中需要取消从超类继承的方法。</li></ul><h4 id="注意事项："><a href="#注意事项：" class="headerlink" title="注意事项："></a>注意事项：</h4><ul><li><p>必须覆盖的方法</p><ul><li>派生类必须覆盖基类中的抽象的方法，否则派生类自身也成为抽象类.</li></ul></li><li><p>不能覆盖的方法</p><ul><li>基类中声明为final的终结方法</li><li>基类中声明为static 的静态方法</li></ul></li><li><p>调用被覆盖的方法super.overriddenMethodName();</p></li></ul><h2 id="子类的构造方法："><a href="#子类的构造方法：" class="headerlink" title="子类的构造方法："></a>子类的构造方法：</h2><h3 id="原则："><a href="#原则：" class="headerlink" title="原则："></a>原则：</h3><ul><li>子类不能从超类继承构造方法</li><li>最好在子类的构造方法中使用super关键字显式调用超类的某个构造方法，调用语句必须出现在子类构造方法的第一行。</li><li>如子类构造方法体中没有显式调用超类构造方法，则系统在执行子类的构造方法时会自动调用超类的默认构造方法（即无参的构造方法）</li></ul><pre><code class="java">public class Person2 &#123;    protected String name, phoneNumber, address;    public Person2() &#123;        this(&quot;&quot;, &quot;&quot;, &quot;&quot;);    &#125;    public Person2(String aName, String aPhoneNumber, String anAddress) &#123;        name = aName;        phoneNumber = aPhoneNumber;        address = anAddress;    &#125;&#125;public class Employee2 extends Person2 &#123;    protected int employeeNumber;    protected String workPhoneNumber;    public Employee2() &#123;        //此处隐含调用构造方法 Person2()        this(0, &quot;&quot;);    &#125;    public Employee2(int aNumber, String aPhoneNumber) &#123;        //此处隐含调用构造方法 Person2()        employeeNumber = aNumber;        workPhoneNumber = aPhoneNumber;    &#125;&#125;public class Professor extends Employee2 &#123;    protected String research;    public Professor() &#123;        super();        research = &quot;&quot;;    &#125;    public Professor(int aNumber, String aPhoneNumber, String aResearch) &#123;        super(aNumber, aPhoneNumber);        research = aResearch;    &#125;&#125;</code></pre><h2 id="object类-："><a href="#object类-：" class="headerlink" title="object类*："></a>object类*：</h2><ul><li>public final Class getClass()  获取当前对象所属的类信息，返回Class对象。</li><li>public String toString() 返回表示当前对象本身有关信息的字符串对象。</li><li>public boolean equals(Object　obj)  比较两个对象引用是否指向同一对象，是则返回true，否则返回false。<ul><li>在Object类中声明的equals()方法功能是比较两个对象引用是否指向同一对象，而不是比较两个引用指向的对象是否相等。</li><li>两个对象具有相同的类型，及相同的属性值，则称二者相等(equal)。</li><li>如果两个引用变量指向的是同一个对象，则称这两个引用变量同一(identical)。</li><li>两个对象同一，则肯定相等。</li><li>两个对象相等，不一定同一。比较运算符“&#x3D;&#x3D;” 判断的是这两个对象是否同一。</li></ul></li><li>protected Object clone( )  复制当前对象，并返回这个副本。</li><li>Public int hashCode()   返回该对象的哈希代码值。</li><li>protected void finalize() throws Throwable 在对象被回收时执行，通常完成的资源释放工作。</li></ul><h2 id="终结类与终结方法："><a href="#终结类与终结方法：" class="headerlink" title="终结类与终结方法："></a>终结类与终结方法：</h2><ul><li>用final修饰的类和方法；</li><li>终结类不能被继承；</li><li>终结方法不能被子类覆盖。</li></ul><p>终结类：</p><pre><code class="java">final class ChessAlgorithm &#123;       . . .&#125;class BetterChessAlgorithm extends ChessAlgorithm &#123;    … &#125;//报错：Chess.java:6: Can&#39;t subclass final classes: class ChessAlgorithmclass BetterChessAlgorithm extends ChessAlgorithm &#123;      ^1 error</code></pre><p>终结方法：</p><pre><code class="java">class Parent&#123;   public Parent() &#123;   &#125; //构造方法   final int getPI() &#123; return Math.PI; &#125; //终结方法&#125;//说明//getPI()是用final修饰符声明的终结方法，不能在子类中对该方法进行覆盖，因而如下声明是错的：Class Child extends Parent&#123;   public Child() &#123;&#125;   int getPI() &#123; return 3.14; &#125; //错！不允许覆盖超类中的终结方法&#125;</code></pre><h2 id="抽象类："><a href="#抽象类：" class="headerlink" title="抽象类："></a>抽象类：</h2><ul><li>代表一个抽象概念的类；</li><li>规定整个类家族都必须具备的属性和行为。</li><li>类名前加修饰符abstract；</li><li>可包含常规类能包含的任何成员，包括非抽象方法；</li><li>也可包含抽象方法：用abstract修饰，只有方法原型，没有方法的实现；</li><li>没有具体实例对象的类，不能使用new方法进行实例化，只能用作超类；</li><li>只有当子类实现了抽象超类中的所有抽象方法，子类才不是抽象类，才能产生实例；</li><li>如果子类中仍有抽象方法未实现，则子类也只能是抽象类。</li></ul><pre><code class="java">//抽象类的声明abstract class Number &#123;    . . .&#125;new Number();//编译器将显示错误</code></pre><h3 id="抽象方法："><a href="#抽象方法：" class="headerlink" title="抽象方法："></a>抽象方法：</h3><ul><li><p>规定子类应该具有的行为，但在抽象超类中尚不能实现的方法，可以声明为抽象方法。</p></li><li><p>声明的语法形式为：</p><pre><code class="java">- public abstract &lt;returnType&gt; &lt;methodName&gt;(...);- </code></pre><p>仅有方法原型，而没有方法体；</p></li><li><p>抽象方法的具体实现由子类在它们各自的类声明中完成；只有抽象类可以包含抽象方法。</p></li></ul><h2 id="泛型"><a href="#泛型" class="headerlink" title="泛型"></a>泛型</h2><ul><li>泛型的本质是参数化类型，即所操作的数据类型被指定为一个参数；</li><li>可以声明泛型类、泛型方法和泛型接口（下一章介绍接口）。</li></ul><pre><code class="java">class GeneralType1 &#123;    Object object;    public GeneralType1(Object object) &#123;        this.object = object;    &#125;    public Object getObj() &#123;        return object;    &#125;&#125;public class GenericsTester1 &#123;    public static void main(String[] args) &#123;        // 传递参数为int类型的2，会自动封箱为Integer类型的对象。        GeneralType1 i = new GeneralType1(2);        // 传递参数为double类型的0.33，会自动封箱为Double类型的对象。        GeneralType1 d = new GeneralType1(0.33);        System.out.println(&quot;i.object=&quot; + (Integer) i.getObj());        // 可以通过编译，但运行时异常        System.out.println(&quot;i.object=&quot; + (Integer) d.getObj());    &#125;&#125;</code></pre><h2 id="类的组合："><a href="#类的组合：" class="headerlink" title="类的组合："></a>类的组合：</h2><ul><li>面向对象的程序用软件对象来模仿现实世界的对象：现实世界中，大多数对象由更小的对象组成；与现实世界的对象一样，软件中的对象也常常是由更小的对象组成。</li><li>Java的类中可以有其他类的对象作为成员，这便是类的组合。</li><li>组合也是一种重用机制，可以使用“有一个” 来描述这种关系。</li></ul><pre><code class="java">//将已存在类的对象放到新类中即可//例如，可以说“厨房（ kitchen）里有一个炉子（cooker）和一个冰箱（refrigerator）”。所以，可简单的把对象myCooker和myRefrigerator放在类Kitchen中：class Cooker&#123;   // 类的语句  &#125;class Refrigerator&#123;   // 类的语句&#125;class Kitchen&#123;       Cooker myCooker;    Refrigerator myRefrigerator;&#125;</code></pre><pre><code class="java">//e.g.public class Point   //点类 &#123;   private int x, y;  //coordinate   public Point(int x, int y) &#123; this.x = x; this.y = y;&#125;   public int GetX()  &#123;  return x; &#125;   public int GetY()  &#123;  return y; &#125;&#125;class Line   //线段类&#123;   private Point  p1,p2;     // 两端点   Line(Point a, Point b) &#123;        p1 = new Point(a.GetX(),a.GetY());      p2 = new Point(b.GetX(),b.GetY());   &#125;    public double Length() &#123;        return Math.sqrt(Math.pow(p2.GetX()-p1.GetX(),2)                     + Math.pow(p2.GetY()-p1.GetY(),2));    &#125;&#125;</code></pre><h1 id="接口和多态"><a href="#接口和多态" class="headerlink" title="接口和多态"></a>接口和多态</h1><h2 id="接口："><a href="#接口：" class="headerlink" title="接口："></a>接口：</h2><ul><li>可以看做是一个“纯”抽象类，它只提供一种形式，并不提供实现</li><li>接口中可以规定方法的原型：方法名、参数列表以及返回类型，但不规定方法主体；</li><li>也可以包含基本数据类型的数据成员，但它们都默认为static和final。</li><li>是面向对象的一个重要机制</li><li>继承多个设计。</li><li>建立类和类之间的“协议”<ul><li>将类根据其实现的功能分组用接口代表，而不必顾虑它所在的类继承层次；这样可以最大限度地利用动态绑定，隐藏实现细节；</li><li>实现不同类之间的常量共享。</li></ul></li></ul><p>接口的语法：</p><pre><code class="java">[接口修饰符] interface 接口名称 [extends 父接口名]&#123;      …//方法的原型声明或静态常量&#125;</code></pre><ul><li>接口的数据成员一定要有初值，且此值将不能再更改，可以省略final关键字。</li><li>接口中的方法必须是“抽象方法”，不能有方法体，可以省略public及abstract关键字。</li></ul><pre><code class="java">//e.g.声明一个接口Shape2D，包括π和计算面积的方法原型interface Shape2D&#123;　　　      //声明Shape2D接口    final double pi=3.14;　　   //数据成员一定要初始化    public abstract double area();　//抽象方法&#125;在接口的声明中，允许省略一些关键字，也可声明如下interface Shape2D&#123;              double pi=3.14;               double area();             &#125;</code></pre><p>实现接口：</p><pre><code class="java">public class 类名称 implements 接口名称 &#123;         //在类体中实现接口的方法         //本类声明的更多变量和方法&#125;</code></pre><p>注意：</p><ol><li>必须实现接口中的所有方法；</li><li>来自接口的方法必须声明成public。</li></ol><h3 id="Lambda表达式："><a href="#Lambda表达式：" class="headerlink" title="Lambda表达式："></a>Lambda表达式：</h3><ul><li>从Java 8开始，可使用Lambda表达式实现函数式接口编程</li><li>Lambda表达式使程序更加简洁、清晰、易于编写</li><li>Lambda表达式由三部分组成：<ul><li>参数表。由于参数类型已经由接口声明，因此Lambda表达式的参数表仅包含参数值，如果接口方法包含了两个参数，则参数表形如(p1, p2)。</li><li>箭头操作符“-&gt;”。</li><li>表达式体。类似于普通的Java方法，可以对参数进行操作，也可以有返回值。</li></ul></li></ul><h3 id="实现多个接口的语法："><a href="#实现多个接口的语法：" class="headerlink" title="实现多个接口的语法："></a>实现多个接口的语法：</h3><ul><li><p>Java不允许一个类有多个超类一</p></li><li><p>个类可以实现多个接口，通过这种机制可实现对设计的多重继承。</p></li><li><p>实现多个接口的语法如下</p><pre><code class="java">[类修饰符] class  类名称  implements 接口1, 接口2,  …&#123;… …&#125;</code></pre></li></ul><h3 id="接口的扩展："><a href="#接口的扩展：" class="headerlink" title="接口的扩展："></a>接口的扩展：</h3><ul><li>接口可通过扩展的技术派生出新的接口<ul><li>原来的接口称为超接口(super interface)；</li><li>派生出的接口称为子接口(sub interface)。</li></ul></li><li>实现一个接口的类也必须实现其超接口。</li><li>接口扩展的语法</li></ul><pre><code class="java">interface 子接口的名称 extends 超接口的名称1，超接口的名称2，…&#123;  … …&#125;</code></pre><p>例：实现如图所示接口</p><p>​Shape是超接口，Shape2D与Shape3D是其子接口。Circle类及Rectangle类实现接口Shape2D，而Box类及Sphere类实现接口Shape3D </p><p><img src="https://phblog.oss-cn-hangzhou.aliyuncs.com/java_1.png"></p><pre><code class="java">// 声明Shape接口interface Shape&#123;               double pi=3.14;              void setColor(String str); &#125;//声明Shape2D接口扩展了Shape接口interface Shape2D extends Shape &#123;    double area();&#125;class Circle implements Shape2D &#123;    double radius;    String color;    public Circle(double r) &#123;   radius=r;  &#125;    @Override    public double area() &#123; return (pi*radius*radius); &#125;    @Override    public void setColor(String str)&#123;       color=str;       System.out.println(&quot;color=&quot;+color);    &#125;&#125;public class InterfaceTester3 &#123;   //测试类  public static void main(String []args) &#123;     Circle cir;     cir=new Circle(2.0);     cir.setColor(&quot;blue&quot;);     System.out.println(&quot;Area = &quot; + cir.area());  &#125;&#125;/*说明首先声明了父接口Shape，然后声明其子接口Shape2D；之后声明类Circle实现Shape2D子接口，因而在此类内必须明确定义setColor()与area()方法的处理方式；最后在主类中我们声明了Circle类型的变量cir并创建新的对象，最后通过cir对象调用setColor()与area()方法。*/</code></pre><h1 id="类型转换："><a href="#类型转换：" class="headerlink" title="类型转换："></a>类型转换：</h1><ul><li>转换方式：<ul><li>隐式的类型转换；</li><li>显式的类型转换。</li></ul></li><li>转换方向：<ul><li>向上转型；</li><li>向下转型。</li></ul></li></ul><h2 id="转换规则："><a href="#转换规则：" class="headerlink" title="转换规则："></a>转换规则：</h2><ul><li>基本类型之间的转换将值从一种类型转换成另一种类型。</li><li>引用变量的类型转换<ul><li>将引用转换为另一类型的引用，并不改变对象本身的类型。</li><li>只能被转为<ul><li>任何一个（直接或间接）超类的类型（向上转型）；</li><li>对象所属的类（或其超类）实现的一个接口（向上转型）；</li><li>被转为引用指向的对象的类型（唯一可以向下转型的情况）。</li></ul></li></ul></li><li>当一个引用被转为其超类引用后，通过他能够访问的只有在超类中声明过的方法。</li></ul><p>例：<img src="D:\PhBlog\source_posts\java-基础-2\java_2.png"></p><p>​Manager对象可以被塑型为Employee、Person、Object或Insurable，不能被塑型为Customer、Company或Car .</p><h3 id="隐式类型转换："><a href="#隐式类型转换：" class="headerlink" title="隐式类型转换："></a>隐式类型转换：</h3><ul><li>基本数据类型<ul><li>可以转换的类型之间，存储容量低的自动向存储容量高的类型转换。</li></ul></li><li>引用变量被转成更一般的类，例如：</li></ul><pre><code class="java">Employee  emp; emp = new Manager(); /*将Manager类型的对象直接赋给                      Employee类的引用变量，系统会                   自动将Manage对象塑型为Employee类</code></pre><ul><li><p>被塑型为对象所属类实现的接口类型，例如：</p><pre><code class="java">Car  jetta = new Car(); Insurable  item = jetta; </code></pre></li></ul><h3 id="显示类型转换"><a href="#显示类型转换" class="headerlink" title="显示类型转换"></a>显示类型转换</h3><ul><li><p>基本数据类型</p><ul><li>(int)871.34354;     &#x2F;&#x2F; 结果为 871 </li><li>(char)65;              &#x2F;&#x2F; 结果为‘A’ </li><li>(long)453;            &#x2F;&#x2F; 结果为453L</li></ul></li><li><p>引用变量</p><ul><li><p>Employee  emp; </p></li><li><p>Manager man;</p></li><li><p>emp &#x3D; new Manager();</p></li><li><p>man &#x3D; (Manager)emp; &#x2F;&#x2F;将emp显式转换为它指向的对象的类型</p></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> knowledge in uni </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Programming Language </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Deutschlernen-1</title>
      <link href="/2022/08/17/Deutschlernen-1/"/>
      <url>/2022/08/17/Deutschlernen-1/</url>
      
        <content type="html"><![CDATA[<h1 id="August"><a href="#August" class="headerlink" title="August"></a>August</h1><!-- toc --><h2 id="8-17"><a href="#8-17" class="headerlink" title="8.17"></a>8.17</h2><h3 id="Synonym-近义短语"><a href="#Synonym-近义短语" class="headerlink" title="Synonym(近义短语)"></a>Synonym(近义短语)</h3><p>in Frage kommen &#x3D; möglich sein 可以被考虑</p><p>zur Verfügung stellen &#x3D; anbieten 提供</p><p>im Trend liegen &#x3D; akutell sein 流行</p><p>auf der Hand liegen &#x3D; klar sein&#x2F;offensichtlich sein  显而易见</p><p>eine Rolle spielen &#x3D; wichtig sein 重要的</p><p>Beachtung finden &#x3D; beachten werden 受关注的</p><h3 id="Phrase（短语）"><a href="#Phrase（短语）" class="headerlink" title="Phrase（短语）"></a>Phrase（短语）</h3><ol><li><p>etw ist Erholung für jmdn 让….放松</p></li><li><p>jmd hat Geduld mit etw&#x2F;jmdm 忍受….</p></li><li><p>jmd hat verantwortung für jmdn&#x2F;etw …..有责任</p></li></ol><h3 id="Worter（词汇）"><a href="#Worter（词汇）" class="headerlink" title="Wörter（词汇）"></a>Wörter（词汇）</h3><ol><li><p>fassen  握住，抓住</p><p>umfassen &#x3D; enthalten 包含                                                   zusammen&#x2F;fassen 总结                                                                  verfassen &#x3D; antwerfen 写，草拟                                           auffassen , Die Auffassen  理解</p></li><li><p>klingen &#x3D; anhören 听起来</p></li><li><p>stillhaten 保持不动</p></li><li><p>vormachen      </p><p>a. 示范   jmd vormachen </p><p>b. 欺骗  sich vormachen</p></li><li><p>freilegen 使…..暴露</p></li><li><p>bverbinen </p><p>a. 包扎</p><p>b. 连线（打电话）</p></li><li><p>die verantwortung tragen &#x2F; unternehmen 承担责任</p></li><li><p>die Konkurrenz  竞争                                                                   der Wettbewerb 竞赛</p></li><li><p>das selbkontrolle  自律                                                                das Selbstbewusstsein 自信</p></li><li><p>der Nerv 神经</p></li></ol><h2 id="8-18"><a href="#8-18" class="headerlink" title="8.18"></a>8.18</h2><h3 id="Phrase（短语）-1"><a href="#Phrase（短语）-1" class="headerlink" title="Phrase（短语）"></a>Phrase（短语）</h3><ol><li><p>Heute schon gefragt        今天已经热销了</p><p>gefragt：a. fragen 的第二分词</p><p>​ b. adj. 热销的， 受欢迎的 </p></li><li><p>notwendige Nebensache 次要的事情中最重要的</p></li><li><p>reagieren auf ….    对…作出反应   &#x3D;  aufnehmen</p></li><li><p>in kommen sein  即将到来</p></li><li><p>im Trend   流行</p></li><li><p>qualitativhochwertige Produckte   高质量商品</p></li><li><p>eine Renaissance erleben 重新流行</p><p>a. erleben 遇到，经历过</p><p>b. die Renaissance 文艺复兴</p></li><li><p>sich engagieren für …. 致力于   &#x3D;    sich einsetzen für ……</p></li><li><p>Hunger beseitigen &#x2F; kampfeln    消除饥饿 &#x2F; 与饥饿作斗争</p></li><li><p>zu etwas zählen 算得上是 </p></li><li><p>ebenso 一样</p><p>ähnlich 差不多 + D.</p></li><li><p>auskommen &#x3D; äußerden &#x3D; angeben 表明</p></li><li><p>sich verhalten 表现</p></li><li><p>absagen + 人 &#x2F; 物 &#x3D; ablehnen   拒绝</p></li><li><p>Einwand erheben 提出反对</p></li><li><p>als + adj + empfinden &#x3D; finden + adj  感觉…….</p></li></ol><h3 id="Worter（词汇）-1"><a href="#Worter（词汇）-1" class="headerlink" title="Wörter（词汇）"></a>Wörter（词汇）</h3><ol><li><p>die Nahrungsaufnahme 营养吸收，进食</p></li><li><p>zunehmende 增加的</p><p>增加：steigen &#x3D; an&#x2F;waschen &#x3D; zulegen &#x3D; zu&#x2F;nehmen</p><p>减少：sinken &#x3D; fallen &#x3D; ab&#x2F;nehmen &#x3D; zurück&#x2F;gehen</p><p>数字达到：betragen &#x3D; liegen bei &#x3D; ausmachen</p><p>um  + 变化量</p><p>auf  + 到达量</p></li><li><p>das Fertiggreicht 已加工的食品 </p></li><li><p>der Verbraucher 消费者</p></li><li><p>nachfragen  询问</p></li><li><p>umfassen &#x3D; enhalten  包括</p></li><li><p>die Bundersvergierung  联邦政府</p></li><li><p>die Bevölkerung  居民</p></li><li><p>fehlen  缺失                                  fehlend   缺失的</p></li><li><p>ausreichen 足够                          ausreichend  满足的</p></li><li><p>bedürfitig  有需求的</p></li><li><p>drohenden 威胁</p></li><li><p>aushandeln 商定，通过……达成交易</p><p>a. erziehen &#x3D; erfüllen &#x3D; erweben 达成</p><p>b.   handeln 与…..打交道</p><p>​      behandeln  诊疗</p><p>​      die Behandelung  对待，治疗</p></li><li><p>irren 弄错</p><p>a. sich (mit &#x2F; in + D.) irren 在……上弄错了</p><p>​in der Richtung &#x2F; mit einer vermutung</p><p>b. sich in j-m irren &#x3D; misverstehen &#x3D; sich in j-m täusch 把……误解为</p></li></ol><h3 id="Konjunktion-连词"><a href="#Konjunktion-连词" class="headerlink" title="Konjunktion(连词)"></a>Konjunktion(连词)</h3><ol><li>sogar 甚至，就连…..</li><li>nur 仅仅</li><li>noch 仍然</li><li>denn 究竟</li><li>daher 所以</li><li>allerding 尽管</li><li>doch 但是</li></ol><h3 id="Grammatik-语法"><a href="#Grammatik-语法" class="headerlink" title="Grammatik(语法)"></a>Grammatik(语法)</h3><h4 id="第一分词："><a href="#第一分词：" class="headerlink" title="第一分词："></a>第一分词：</h4><ol><li><p>构成：Verb im Infinitiv + d（动词不定式 + d，大部分可以视为动词原型 + d）</p></li><li><p>用法：</p><p>a. 修饰动词，表示主动或者伴随</p><p>b. 反身动词构成第一分词时，保留sich</p><p>c. 作表语，令 …… 一样</p><p>d. 可以表示两个动作同时发生，把其中一个表示改为第一分词</p><p>e. zu + 第一分词 要完成的事     die zuerledigende aufgaben    要去完成的任务</p><p>f. ….的人 resende  studierende</p></li><li><p>第一分词：</p><p>anregend               启发性的                                         ermüdend           疲劳的</p><p>ansprechend         吸引人的                                         fazinierend         惊喜的</p><p>anstrengend          费力的                                             packend              惊喜的</p><p>auffallen                 引人注目的                                     passend              吸引人的</p><p>aufregend              诧异的                                             schockieren        震惊的</p><p>bedeutend             重要的                                             spannend            惊讶的</p><p>beindruckend        印象深刻的                                     überzeugend      有说服力的</p><p>entscheidend         重要的                                             verwirrend          迷惑的</p><p>enttäuschend         令人失望的                                     vielversprechend    有希望的</p><h4 id="形容词词尾："><a href="#形容词词尾：" class="headerlink" title="形容词词尾："></a>形容词词尾：</h4><ol><li>有定冠词:</li></ol><p><img src="https://phblog.oss-cn-hangzhou.aliyuncs.com/typ_1.png" alt="有定冠词"></p><ol start="2"><li>有不定冠词</li></ol><p><img src="https://phblog.oss-cn-hangzhou.aliyuncs.com/typ_2.png" alt="有不定冠词"></p><ol start="3"><li>零冠词</li></ol><p><img src="https://phblog.oss-cn-hangzhou.aliyuncs.com/typ_3.png" alt="零冠词"></p></li></ol><h2 id="8-19"><a href="#8-19" class="headerlink" title="8.19"></a>8.19</h2><h3 id="Phrase（短语）-2"><a href="#Phrase（短语）-2" class="headerlink" title="Phrase（短语）"></a>Phrase（短语）</h3><ol><li><p>schutz vor …..    保护免受…..伤害</p></li><li><p>Betrag leisten zu  为……做贡献</p></li><li><p>die Erholung von…..  从…..中回复过来</p></li><li><p>geben Auskunft  给出信息</p></li><li><p>Er hat Fläche von ……  占据…..面积</p></li><li><p>mit jmd ungehen  与…打交道</p></li><li><p>bei + 天气  在…..天气下</p></li><li><p>sich an ……. anpassen  适应…..</p></li><li><p>vorhanden sein 存在</p></li><li><p>sich entscheiden 取决于</p></li><li><p>informieren über  普及………</p></li><li><p>mit etwas beschäftigen 忙于…… &#x2F; 文章主要涉及</p></li><li><p>einblick gebe in &#x3D; erkennen 认出</p></li><li><p>auf seine kosten 值得 &#x3D; ……sein wert …..是值得的</p></li><li><p>sich beteiligen 参与…..</p><p>sein beteiligt 参与的</p></li><li><p>Ratschläge geben 给…..建议</p></li><li><p>sagen wir mal so 也就是说</p><p>wie ich schon sagte 向我刚才说的</p><p>ehrlich gesagt 老师说</p></li><li><p>bedürfen + D &#x3D; verlangen + 人三物四     需要….. &#x2F; 提出….要求</p></li><li><p>Reation auf  对……的反应</p></li><li><p>mit helfen + 二格    在…..的帮助下</p></li><li><p>warnen ….. vor 提醒…….</p></li><li><p>gegen etwas tun 应对……</p></li><li><p>jmd. hat etw. im Angebot  有存货</p></li><li><p>jmd. bietet Lieferservice 提供运送服务</p></li><li><p>jmd. gibt einen Preisnachlass 提供优惠 </p></li><li><p>jmd. macht einen Kostenvoranschlag 做好的报价单</p></li><li><p>jmd. rechnet mit der Lieferung  预估</p></li><li><p>jmd. gibt eine Bestellung 下订单</p><p>（aufgeben + 三格 还可以表示放弃 &#x3D; verziehten）</p></li><li><p>sich halten etwas 遵守…….</p></li></ol><h3 id="Worter（词汇）-2"><a href="#Worter（词汇）-2" class="headerlink" title="Wörter（词汇）"></a>Wörter（词汇）</h3><ol><li><p>erhalten  保留</p></li><li><p>die Grenze 边界</p></li><li><p>geeingnet 适和的</p></li><li><p>unterscheidlich  不同的</p></li><li><p>aufziehen   培养，养育 </p></li><li><p>daher  由此                                  solche   这样</p></li><li><p>sichern 使安全</p></li><li><p>zuverlässig &#x3D; vertaubar   可信赖的</p></li><li><p>vorurteile 偏见</p></li><li><p>verhalten  表明</p><p>erhalten    抚养 &#x2F; 得到                             eine Familie erhalten   寄养家庭</p></li><li><p>beschäftigen 雇佣</p><p>der Arbeitgeber 雇主</p><p>der Arbeitsnehmer 雇员</p><p>trennen 解雇</p></li><li><p>erforschen 研究</p></li><li><p>bestehen 存在（有无生命的都可以表示）</p><p>existieren 存在（只表示有生命的）</p></li><li><p>die Verbreitung 传播</p><p>verbreiten 传播</p><p>breit 宽的</p></li><li><p>schaffen 创造</p></li><li><p>die Expedition   考察</p><p>das Experiment (unternehmen &#x2F; erstellen)  做实验</p></li><li><p>betreuung 辅导</p></li></ol><h3 id="Grammatik-语法-1"><a href="#Grammatik-语法-1" class="headerlink" title="Grammatik(语法)"></a>Grammatik(语法)</h3><h4 id="状语顺序："><a href="#状语顺序：" class="headerlink" title="状语顺序："></a>状语顺序：</h4><p>时间(tenporal) + 原因(kausal) + 情况(modal) + 地点(lokal)</p><p><img src="https://phblog.oss-cn-hangzhou.aliyuncs.com/Deu_1.png"></p><h2 id="8-19-1"><a href="#8-19-1" class="headerlink" title="8.19"></a>8.19</h2><h3 id="Satzen"><a href="#Satzen" class="headerlink" title="Sätzen"></a>Sätzen</h3><ol><li><p>Hoffentlich verirren sie sich nicht <u>in</u> der Richtung.</p><p>sich verirren in    错认为 </p></li><li><p><u>Troz</u> aller Schwierigkeiten wollte er nicht audgeben.</p><p>Troz 尽管</p></li><li><p>Die Zuschauer sind <u>von</u> der Auffürung sehr enttäuscht.</p><p>enttäuscht von 对…..感到失望</p></li><li><p>Dyer ist <u>für</u> die Dekoration und den Verkaufen der Produckte verantwortlich.</p><p>veranwortlich für ………. 对…. 负责</p></li><li><p>Der Geschmack steht <u>an</u> erster Stelle, gefolgt <u>von</u> Qualität und Aussehen.</p><p>an erster Stelle 第一位的是，             von   排在之后的是</p></li><li><p>An Sonntagen werden innerhalb <u>von</u> drei Stunden Torten verkauft.</p><p>innerhalb von …. 在…..之内</p></li><li><p>Die kleinen Betrieben haben nicht genügend Arbeitskräfte <u>zur</u> Verfügung</p><p>zur Verfügung haben  提供……</p></li><li><p>Ich erkundigte mich <u>nach</u> seinem Vorleben</p><p>sich erkundigte nach  询问…</p></li><li><p>Der Arbeitsgeber versorgt die Arbeitsnehmer <u>mit</u> Nahrung und Wohung.</p><p>versorgen mit  提供…..</p></li><li><p>Er hat einen wertvoll Beitrag <u>zur</u> Lösung des Problems geleistet.</p><p>Beitrag zur ……     贡献…..   </p></li><li><p>Der Mensch greift nicht <u>in</u> den natürlichen Kreislauf von Wachsen und Sterben ein.</p><p>in A. eingreien 干涉…… </p></li><li><p>Sie ist im sechsten Monat schwanger, deshalb ist sie <u>für</u> schwere Arbeit nicht geeingnet.</p><p>geeingnet für ……  适合….</p></li><li><p>Die Wölfe können sich <u>an</u> die Umgebung gut anpassen.</p><p>sich anpassen an ……      适应 ……</p></li><li><p>Der Naturschutzbund setzt sich <u>für</u> die Erhaltung geeineter Lebensräume für Wölfe ein.</p><p>sich einsetzen für      致力于 </p></li><li><p>Die Dokumentarfilme geben ein Blick <u>in</u> das Leben und Verhalten der Tiere. </p><p>ein Blick in …..     看到……</p></li></ol><h2 id="8-22"><a href="#8-22" class="headerlink" title="8.22"></a>8.22</h2><h3 id="Worter（词汇）-3"><a href="#Worter（词汇）-3" class="headerlink" title="Wörter（词汇）"></a>Wörter（词汇）</h3><ol><li><p>fraglich      值得质疑的</p></li><li><p>auffallen    引人注意</p></li><li><p>einziehen   联系</p></li><li><p>hinfallen     落下来</p></li><li><p>sich gesellen  &#x3D; die Gesellschaft         与……结伴</p></li><li><p>änhlen          像………                                      ähnlich  相似的……..</p><p>änhlichkeit  相似性</p></li><li><p>besagen &#x3D; sich ergeben   说明，表明（物作主语）</p></li><li><p>äußlich &#x2F; innerlich    外表上的 &#x2F; 内在的</p><p>kopperlich &#x2F;               身体上的 &#x2F; 内心的</p></li><li><p>der Gesichzung          面部特征</p></li><li><p>aussetzen                    遭受，蒙受</p></li><li><p>jahrelang                      数年之久的</p></li><li><p>gleichen                        一样的</p></li><li><p>die Mimik                      表情                               die Gestik                手势</p></li><li><p>die Indiz + für               迹象（die Indizien）</p><p>die Beweise                  事实证据</p></li><li><p>das Faktum                   事实                                 die Fakten（复数）</p></li><li><p>entgegengesetzt &#x3D; gegenzälich        adj.         相反的</p><p>entgegen &#x3D; gegenüber + D.    （介词）反对</p></li><li><p>pramatisch                   实用的</p></li></ol><h3 id="Phrase（短语）-3"><a href="#Phrase（短语）-3" class="headerlink" title="Phrase（短语）"></a>Phrase（短语）</h3><ol><li><p>zueinander finden &#x3D; zusammenkommen            互相适合         </p></li><li><p>von Vorteil sein                                                         占有优势</p></li><li><p>sich änlich sehen ……                                               看起来像 …….. </p><p>änlich in etwas ……                                                    与 ….. 相似</p></li><li><p>offen bleiben                                                              值得讨论的</p></li><li><p>sich fühlen hingezogen                                             被 …… 吸引</p></li><li><p>je….. ,unso …..                                                             越来越 ……</p></li><li><p>zutreffen auf                                                               适用于</p></li></ol><h3 id="Satzen（句子）"><a href="#Satzen（句子）" class="headerlink" title="Sätzen（句子）"></a>Sätzen（句子）</h3><p>​加三格（D.）的动宾搭配</p><ol><li><p>Oma kommt gut <u>mit</u> frau Müller aus.</p><p>auskommen mit  与…..相处的好</p></li><li><p>Die Kunden lassen ihre schlechte Laune an mir aus.</p><p>auslassemn an   对 …. 发泄情绪</p></li><li><p>Internationale Lebensmiteltransporte tragen zum Klimawandel bei.</p><p>beitragen zu        对…. 做贡献</p></li><li><p>Wir beschäftigen uns heute mit dem Thema “Medien”.</p><p>sich beschäftigen mit   忙于…..       </p></li><li><p>Georg bespricht das Peoblem mit seiner Frau.</p><p>besprechen mit           与 …… 讨论</p></li><li><p>Der Test besteht aus zwei einfachen Aufgaben.</p><p>bestehen aus               由  …..组成</p></li></ol><h2 id="8-23"><a href="#8-23" class="headerlink" title="8.23"></a>8.23</h2><h3 id="Worter（词汇）-4"><a href="#Worter（词汇）-4" class="headerlink" title="Wörter（词汇）"></a>Wörter（词汇）</h3><ol><li><p>locker       随便的（形容人）     </p></li><li><p>komplizier    内心复杂的                          anspruchsvoll        要求高的</p></li><li><p>die Adaptation      改编 ……      die Adaptationen（复数）</p></li><li><p>der Reinfall            失望             die Reinfälle (复数)</p><p>&#x3D;  die enttäuschung                  enttäuscht   </p></li><li><p>mächtig                  非常</p></li><li><p>dramatisch           戏剧性的，紧张的     &#x3D; spannend</p></li><li><p>deprimieren        使 ….. 沮丧的                pulikum      使 ….. 抑郁         （物作主语）</p></li><li><p>fesseln &#x3D; anziehen &#x3D; faszinieren            吸引</p></li><li><p>ankämpfen          斗争，反对 &#x3D; kämpfen        </p></li><li><p>funken   擦出火花</p></li><li><p>durscheinanderbringen    使 …..  混乱</p></li><li><p>rezensieren &#x3D; kommentieren   评论</p></li></ol><h3 id="Phrase（短语）-4"><a href="#Phrase（短语）-4" class="headerlink" title="Phrase（短语）"></a>Phrase（短语）</h3><ol><li>jmd kommt zu besuchen &#x3D; jmd verbingt Zeit bei jmdm           拜访某地</li><li>jmd kommt ums Leben &#x3D; jmd. stribt                                            某人死了</li><li>etw nimmt seien Lauf &#x3D; etwas geschiet order passiert             ….. 发生了</li><li>etw findet ein Ende &#x3D; etw wird bendet                                        …..  结束了</li><li>jmd wüscht sich Abwechslung &#x3D; jmd möchte anderes tun     希望替换 …..</li><li>jmd lebt auf dem Land &#x3D; jmd wohnt nicht in der Stadt.            住在村子里</li><li>locker und hip      随性的</li><li>gegen etwas kämpfen   反对…..</li></ol><h3 id="Grammatik-语法-2"><a href="#Grammatik-语法-2" class="headerlink" title="Grammatik(语法)"></a>Grammatik(语法)</h3><h4 id="第一虚拟式"><a href="#第一虚拟式" class="headerlink" title="第一虚拟式"></a>第一虚拟式</h4><p>用法：转述别人的话（间接引语），科研文章中常用</p><p>​z.B. Sie sagte zu mir : „ Ich bin stolz auf deinen Erfolg.</p><p>​-&gt;Sie sagte zu mir, sie sei stolz auf meinen Erfolg.</p><p>构成：</p><pre><code>     通常：动词词干 + e + 人称词尾(当变化与直陈式一致时，用第二虚拟式代替)</code></pre><table><thead><tr><th align="center">人称&#x2F;动词</th><th align="center">haben</th><th>sein</th><th>werden</th><th>gehen</th></tr></thead><tbody><tr><td align="center">ich</td><td align="center">hätte</td><td>sei</td><td>würde</td><td>gehe</td></tr><tr><td align="center">du</td><td align="center">habest</td><td>seist</td><td>werdest</td><td>gehest</td></tr><tr><td align="center">er&#x2F;es&#x2F;sie</td><td align="center">habe</td><td>sei</td><td>werde</td><td>gehe</td></tr><tr><td align="center">wir</td><td align="center">haben</td><td>seien</td><td>würden</td><td>gehen</td></tr><tr><td align="center">ihr</td><td align="center">hätten</td><td>seiet</td><td>würdet</td><td>gehet</td></tr><tr><td align="center">sie</td><td align="center">habet</td><td>seien</td><td>würden</td><td>gehen</td></tr><tr><td align="center">Sie</td><td align="center">hätte</td><td>seien</td><td>würden</td><td>gehen</td></tr></tbody></table><h2 id="8-24"><a href="#8-24" class="headerlink" title="8.24"></a>8.24</h2><h3 id="Worter（词汇）-5"><a href="#Worter（词汇）-5" class="headerlink" title="Wörter（词汇）"></a>Wörter（词汇）</h3><ol><li><p>der Albtraum                   噩梦</p></li><li><p>die Menschenheit      人类（一个整体）         der Mensch   （一般情况下的）人类</p></li><li><p>erkaufen                          </p><p>换取  &#x3D;    austauschen</p><p>收买</p></li><li><p>entstammen + 三格                  来自于…….</p></li><li><p>neigen                                      喜爱，偏向于….</p></li><li><p>währenddessen                      与此同时（占位）</p><p>&#x3D; während +从句                      </p><p>   mittleweile      在…同时，在那个时候</p></li><li><p>aufkommend     产生 &#x3D; erzügend</p></li><li><p>aufgrund           根据 + 二格  &#x3D; Infolge + 二格    由于</p></li><li><p>das Schuldgefühl     负罪感</p><p>die Schuld                 过错</p></li><li><p>​      </p></li><li><p>abstoßend               令 ….. 厌恶</p><p>abstoßend - abstieß - geabstoßen  </p></li><li><p>unsezten      </p><p>付诸实施       &#x3D; durchführen</p><p>换位</p><p>移走</p><p>转化     （in   etw）</p><p>把 …. 调换   unsetzen etwas in etwas  &#x3D; untauschen</p></li><li><p>verlangen</p><p>要求       物作主语</p><p>盼望       人做主语 +nach  &#x3D;  nach etwas sehnen</p><p>与 … 联系（在通话中）+ mit jmd</p></li><li><p>flüchten    逃走</p><p>从 …. 中逃出  + aus</p><p>逃去 ….  + nach &#x2F; in</p></li><li><p>hinzugeben &#x3D; erganzen 添加</p><p>（gib hinzu，gab hinzu ，hinzugegeben）</p></li><li><p>gestehen + 四格     承认 &#x3D; zugeben</p></li><li><p>anerkennen 认可</p></li><li></li></ol><h3 id="Phrase（短语）-5"><a href="#Phrase（短语）-5" class="headerlink" title="Phrase（短语）"></a>Phrase（短语）</h3><ol><li><p>stammen aus                          来自…</p></li><li><p>die Schulde an etw                 ……的过错</p></li><li><p>verziechten auf                       放弃…… </p><p>&#x3D; etw aufgeben</p></li><li><p>sich verlieben in                     彼此相爱</p></li></ol><h3 id="Grammatik-语法-3"><a href="#Grammatik-语法-3" class="headerlink" title="Grammatik(语法)"></a>Grammatik(语法)</h3><h4 id="带zu不定式"><a href="#带zu不定式" class="headerlink" title="带zu不定式"></a>带zu不定式</h4><h5 id="可以使用带zu不定式的情况："><a href="#可以使用带zu不定式的情况：" class="headerlink" title="可以使用带zu不定式的情况："></a>可以使用带zu不定式的情况：</h5><ol><li><p>表示开始，结束，计划，打算：（前后主语一致）</p><p>beginnen, anfangen, aufhören, planen, denken, </p></li><li><p>表示需求，希望，相信：（前后主语一致）</p><p>brauchen, hoffen, glauben, werstehen, vergessen</p></li><li><p>表示对他人的祝福，劝告：（前后主语不一致，后面主语是主句的三格&#x2F;四格宾语）</p><p>bitten, einladen, aufforder(要求), empfehlen, raten(劝告), verbieten(禁止)</p></li><li><p>作定语：</p><p>die Lust, den Plan, die Absicht(目的), die Chance, mölichkeit + zu tun</p><p>z.B.  Hast du Lust, im Park spazierenzugehen?</p></li><li><p>作表语：</p><p>bereit(准备好的), fähig(有能力的) + zu tun</p></li><li><p>用Es作主语代替带zu不定式：</p><p>Es ist möglich &#x2F; nötig &#x2F; verboten &#x2F; 一分词 &#x2F; 二分词, zu ……</p><p>z.B. </p></li><li><p>动词搭配带zu不定式</p><p>Es macht jmd spaß, Es glinge, es misslingt, fällt jm schwer + zu</p></li><li><p>作宾语：</p><p>beabsichtigen(打算), beschließen(做出….决定), erlauben(同意), einfiehlt(命令), leisten(提供)</p></li></ol><h5 id="不可以使用带zu不定式的情况："><a href="#不可以使用带zu不定式的情况：" class="headerlink" title="不可以使用带zu不定式的情况："></a>不可以使用带zu不定式的情况：</h5><ol><li><p>感官：</p><p>sagen, sprechen, fragen, antworten, erzählen, berichten(报告，告知), sehen, lesen, bemerken(察觉，注意到), schauen(观看), gucken(瞧), hören, reichen(把…递给), fühlen</p></li><li><p>认知：</p><p>wissen, zweifeln(怀疑), vermuten(猜测), kennen, lernen</p></li></ol><h2 id="8-28"><a href="#8-28" class="headerlink" title="8.28"></a>8.28</h2>]]></content>
      
      
      <categories>
          
          <category> knowledge in uni </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Deutsch </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
